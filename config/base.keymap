#include <behaviors.dtsi>
#include <behaviors/num_word.dtsi> // requires auto-layer module
#include <dt-bindings/zmk/keys.h>

#define XXX &none
#define ___ &trans

#if CONFIG_WIRELESS
    #include <dt-bindings/zmk/bt.h>
    #define _BT_SEL_KEYS_   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
    #define _BT_SEL_KEYS_2_ &bt BT_CLR &bt BT_SEL 5 &bt BT_SEL 6 &bt BT_SEL 7 &bt BT_SEL 8 &bt BT_SEL 9
#else
    #define _BT_SEL_KEYS_    ___        ___          ___          ___          ___          ___
    #define _BT_SEL_KEYS_2_  ___        ___          ___          ___          ___          ___
#endif

#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/greek.dtsi"
#include "zmk-helpers/unicode-chars/german.dtsi"

#define DFL  0
#define GML  1
#define GAL  2
#define DTL  3
#define EPL  4
#define ZEL  5
#define SDL  6
#define SUL  7
#define LWL  8
#define REL  9
#define RSL 10
#define AJL 11
#define SSL 12
#define HSL 13
#define KSL 14
#define CSL 15
#define SLL 16
#define FSL 17
#define BHL 18
#define WHL 19
#define WPL 20

#define DEF 0
#define NAV 15
#define FN 16
#define NUM 17
#define SYS 18
#define UC 19
#define MOUSE 20

#include "combos.dtsi"  // requires layer aliases
#include "mouse.dtsi"
#include "extra_keys.h"

/* Global settings */

#define QUICK_TAP_MS 175

&sk {  // sticky-key config
    release-after-ms = <900>;  // release after 0.6s
    quick-release;             // no double capitalization when rolling keys
};

&sl {  // sticky-layer config
    ignore-modifiers;          // allow chording sticky mods & layers
};

&lt {  // layer-tap config
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
};

/* Homerow mods */

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumbs

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
MAKE_HRM(hml, &kp, &kp, KEYS_R THUMBS)  // left-hand HRMs
MAKE_HRM(hmr, &kp, &kp, KEYS_L THUMBS)  // right-hand HRMs

MAKE_HRM(hml_repeat, &kp, &key_repeat, KEYS_R THUMBS)  // used for HRM-combo
MAKE_HRM(hmr_lpar_lt, &kp, &lpar_lt, KEYS_L THUMBS)    // "    "   "   "
MAKE_HRM(hmr_rpar_gt, &kp, &rpar_gt, KEYS_L THUMBS)    // "    "   "   "

/* Nav cluster */

// long-tap action on hold, short-tap action on all interrupts
#define MT_CORE \
    flavor = "tap-preferred"; \
    tapping-term-ms = <220>; \
    quick-tap-ms = <220>; \
    hold-trigger-key-positions = <0>;

&mt { MT_CORE };
ZMK_HOLD_TAP(mt_home, bindings = <&masked_home>, <&kp>; MT_CORE)
ZMK_HOLD_TAP(mt_end, bindings = <&masked_end>, <&kp>; MT_CORE)

#define NAV_LEFT  &mt_home 0   LEFT    // tap: left  | long-tap: beginning of line
#define NAV_RIGHT &mt_end 0    RIGHT   // tap: right | long-tap: end       of line
#define NAV_UP    &mt LC(HOME) UP      // tap: up    | long-tap: beginning of document
#define NAV_DOWN  &mt LC(END)  DOWN    // tap: down  | long-tap: end       of document
#define NAV_BSPC  &mt LC(BSPC) BSPC    // tap: bspc  | long-tap: delete word backward
#define NAV_DEL   &mt LC(DEL)  DEL     // tap: del   | long-tap: delete word forward

// mask CTRL when holding left/right to avoid accidental jumps to beginning/end of document
#define MASK_MODS(NAME, MODS, BINDING) \
    ZMK_MOD_MORPH(NAME, \
        bindings = <BINDING>, <BINDING>; \
        mods = <MODS>; \
    )
MASK_MODS(masked_home, (MOD_LCTL), &kp HOME)
MASK_MODS(masked_end,  (MOD_LCTL), &kp END)

/* Caps-word, num-word and smart-mouse */

// tap: sticky-shift | shift + tap/ double-tap: caps-word | hold: shift
ZMK_MOD_MORPH(smart_shft,
    bindings = <&sk LSHFT>, <&caps_word>;
    mods = <(MOD_LSFT)>;
)
&caps_word {  // mods deactivate caps-word, requires PR #1451
    /delete-property/ ignore-modifiers;
};

// tap: num-word | double-tap: sticky num-layer | hold: num-layer
#define SMART_NUM &smart_num NUM 0
ZMK_HOLD_TAP(smart_num,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&num_dance>;
)
ZMK_TAP_DANCE(num_dance,
    tapping-term-ms = <200>;
    bindings = <&num_word NUM>, <&sl NUM>;  // reverse this for sticky-num on single tap
)

// smart-mouse, requires PR #1366
ZMK_TRI_STATE(smart_mouse,
    bindings = <&tog MOUSE>, <&none>, <&tog MOUSE>;
    ignored-key-positions = <LT1 LT3 RT0 RT1 RT2 RT3 RT4 RM1 RM2 RM3 RB1 RB2 RB3 RH0 RH1>;
    ignored-layers = <MOUSE>;
)

/* Custom behaviors */

// Alt+Tab swapper, requires PR #1366
ZMK_TRI_STATE(swapper,
    bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
    ignored-key-positions = <LT2>;
)

// Sticky layer + sticky shift (workaround for issue #1421)
ZMK_STICKY_KEY(sls,
    release-after-ms = <1000>;
    bindings = <&uc_shift>;
    ignore-modifiers;
)
ZMK_MACRO(uc_shift,
    wait-ms = <0>;
    tap-ms = <1>;
    bindings = <&macro_press &mo UC &kp LSHFT>
             , <&macro_pause_for_release>
             , <&macro_release &mo UC &kp LSHFT>;
)

// reuse basic mod-morph scheme
#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )

// tap: comma | shift + tap: semicolon | ctrl + shift + tap: <
SIMPLE_MORPH(comma_morph, SFT, &kp COMMA, &comma_inner_morph)
SIMPLE_MORPH(comma_inner_morph, CTL, &kp SEMICOLON, &kp LESS_THAN)

// tap: dot | shift + tap: colon | ctrl + shift + tap: >
SIMPLE_MORPH(dot_morph, SFT, &kp DOT, &dot_inner_morph)
SIMPLE_MORPH(dot_inner_morph, CTL, &kp COLON, &kp GREATER_THAN)

// tap: qmark | shift + tap: excl
SIMPLE_MORPH(qexcl, SFT, &kp QMARK, &kp EXCL)

// tap: left/right parenthesis | shft + tap: less-than/greater-than
SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)

// tap: space | shift + tap: dot -> space -> sticky shift | hold: activate layer
ZMK_HOLD_TAP(lt_spc,
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <QUICK_TAP_MS>;
    bindings = <&mo>, <&spc_morph>;
)
SIMPLE_MORPH(spc_morph, SFT, &kp SPACE, &dot_spc)
ZMK_MACRO(dot_spc,
    wait-ms = <0>;
    tap-ms = <5>;
    bindings = <&kp DOT &kp SPACE &sk LSHFT>;
)

// tap: backspace | lshft + tap: delete | rshft + tap: shift-delete
ZMK_MOD_MORPH(bs_del,
    bindings = <&kp BSPC>, <&kp DEL>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    keep-mods = <MOD_RSFT>;
)

// tap: copy | double-tap: cut
ZMK_TAP_DANCE(copy_cut,
    tapping-term-ms = <200>;
    bindings = <&kp LC(INS)>, <&kp LC(X)>;
)

// Windows sleep key
ZMK_MACRO(win_sleep,
    wait-ms = <500>;
    tap-ms = <50>;
    bindings = <&kp LG(X) &kp U &kp S>;
)

// misc aliases
#define CANCEL      &kp K_CANCEL             // cancel caps-word, num-word and smart-mouse
#define DSK_PREV    &hmr LCTRL LG(LC(LEFT))   // previous desktop
#define DSK_NEXT    &hmr LALT LG(LC(RIGHT)) // next     desktop
#define PIN_WIN     &kp LG(LC(LS(Q)))        // pin window across desktops
#define PIN_APP     &kp LG(LC(LS(A)))        // pin application across desktops
#define DSK_MGR     &kp LA(GRAVE)            // desktop manager
#define VOL_DOWN    &hmr RSHFT C_VOL_DN

#define ZMK_CONDITIONAL_LAYER(if_name, if_layers, then_layer) \
            if_name: if_name { \
                if-layers = <if_layers>; \
                then-layer = <then_layer>; \
            };

/* Keymap */


// #define ZMK_CONDITIONAL_LAYERS() \
/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";

 ZMK_CONDITIONAL_LAYER(realspace_layer, SDL SUL, RSL) // spacedown + spaceup = realspace
 ZMK_CONDITIONAL_LAYER(adjust_layer, LWL REL, AJL) // lower + raise = adjust
 ZMK_CONDITIONAL_LAYER(subspace_layer, SDL LWL, SSL) // spacedown + lower = subspace
 ZMK_CONDITIONAL_LAYER(hyperspace_layer, SUL REL, HSL) // spaceup + raise = hyperspace
 ZMK_CONDITIONAL_LAYER(knownspace_layer, SDL REL, KSL) // spacedown + raise = knownspace
 ZMK_CONDITIONAL_LAYER(cyberspace_layer, LWL SUL, CSL) // lower + spaceup = cyberspace

 ZMK_CONDITIONAL_LAYER(slipspace_layer, SSL REL, SLL) // subspace + raise = slipspace
 ZMK_CONDITIONAL_LAYER(foldspace_layer, LWL HSL, FSL) // lower + hyperspace = foldspace
 ZMK_CONDITIONAL_LAYER(blackhole_layer, SSL SUL, BHL) // subspace + spaceup = blackhole
 ZMK_CONDITIONAL_LAYER(whitehole_layer, SDL HSL, WHL) // spacedown + hyperspace = whitehole
 ZMK_CONDITIONAL_LAYER(warp_layer, SSL HSL, WPL) // subspace + hyperspace = warp

 ZMK_CONDITIONAL_LAYER(sys_layer, FN NUM, SYS)  // FN + NUM --> SYS
  };
};


ZMK_LAYER(default,
//╭──────╮ ┌───────────────┬───────┬───────┬──────────┬───────────────┬──────────────┐ ╭──────╮ ┌─────────────┬───────────────┬───────────┬─────────┬──────────┬───────────┐ ╭──────╮
    X_LT     &kp TAB         &kp Q   &kp W   &kp E      &kp R           &kp T            X_MT     &kp Y         &kp U           &kp I       &kp O     &kp P      &kp BSLH      X_RT
//├──────┤ ├───────────────┼───────┼───────┼──────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼───────────┼─────────┼──────────┼───────────┤ ├──────┤
    X_LM     &mt LCTRL ESC   &kp A   &kp S   &kp D      &kp F           &kp G            X_MM     &kp H         &kp J           &kp K       &kp L     &kp SEMI   &kp SQT       X_RM
//├──────┤ ├───────────────┼───────┼───────┼──────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼───────────┼─────────┼──────────┼───────────┤ ├──────┤
    X_LB     &kp LSHFT       &kp Z   &kp X   &kp C      &kp V           &kp B            X_MB     &kp N         &kp M           &kp COMMA   &kp DOT   &kp FSLH   &kp RSHFT     X_RB
//├──────┤ └───────────────┴───────┴───────┼──────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼───────────┼─────────┴──────────┴───────────┘ ├──────┤
    X_LH                                     &kp LGUI   &lt SDL SPACE   &lt LWL BSPC     X_MH     &lt REL RET   &lt SUL SPACE   &kp RALT                                       X_RH
//╰──────╯                                 └──────────┴───────────────┴──────────────┘ ╰──────╯ └─────────────┴───────────────┴───────────┘                                  ╰──────╯
)

ZMK_LAYER(game,
//╭──────╮ ┌───────────────┬───────┬───────┬──────────┬───────────────┬──────────────┐ ╭──────╮ ┌─────────────┬───────────────┬───────────┬─────────┬──────────┬───────────┐ ╭──────╮
    X_LT     &kp TAB         &kp Q   &kp W   &kp E      &kp R           &kp T            X_MT     &kp Y         &kp U           &kp I       &kp O     &kp P      &kp BSLH      X_RT  
//├──────┤ ├───────────────┼───────┼───────┼──────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼───────────┼─────────┼──────────┼───────────┤ ├──────┤
    X_LM     &mt LCTRL ESC   &kp A   &kp S   &kp D      &kp F           &kp G            X_MM     &kp H         &kp J           &kp K       &kp L     &kp SEMI   &kp SQT       X_RM  
//├──────┤ ├───────────────┼───────┼───────┼──────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼───────────┼─────────┼──────────┼───────────┤ ├──────┤
    X_LB     &kp LSHFT       &kp Z   &kp X   &kp C      &kp V           &kp B            X_MB     &kp N         &kp M           &kp COMMA   &kp DOT   &kp FSLH   &kp RSHFT     X_RB  
//├──────┤ └───────────────┴───────┴───────┼──────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼───────────┼─────────┴──────────┴───────────┘ ├──────┤
    X_LH                                     &kp LGUI   &lt SDL SPACE   &lt LWL BSPC     X_MH     &lt REL RET   &lt SUL SPACE   &kp RALT                                       X_RH  
//╰──────╯                                 └──────────┴───────────────┴──────────────┘ ╰──────╯ └─────────────┴───────────────┴───────────┘                                  ╰──────╯
)

ZMK_LAYER(gamma,
//╭──────╮ ┌───────────────┬────────────┬────────────┬─────────────┬───────────────┬──────────────┐ ╭──────╮ ┌─────────────┬───────────────┬─────────────┬────────────┬───────────────┬───────────┐ ╭──────╮
    X_LT     &kp TAB         &kp Q        &kp W        &kp E         &kp R           &kp T            X_MT     &kp Y         &kp U           &kp I         &kp O        &kp P           &kp BSLH      X_RT  
//├──────┤ ├───────────────┼────────────┼────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┼───────────────┼───────────┤ ├──────┤
    X_LM     &mt LCTRL ESC   &mt RGUI A   &mt RALT S   &mt RCTRL D   &mt LSHFT F     &kp G            X_MM     &kp H         &mt RSHFT J     &mt RCTRL K   &mt RALT L   &mt RGUI SEMI   &kp SQT       X_RM  
//├──────┤ ├───────────────┼────────────┼────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┼───────────────┼───────────┤ ├──────┤
    X_LB     &kp LSHFT       &kp Z        &kp X        &kp C         &kp V           &kp B            X_MB     &kp N         &kp M           &kp COMMA     &kp DOT      &kp FSLH        &kp RSHFT     X_RB  
//├──────┤ └───────────────┴────────────┴────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┴───────────────┴───────────┘ ├──────┤
    X_LH                                               &kp LGUI      &lt SDL SPACE   &lt LWL BSPC     X_MH     &lt REL RET   &lt SUL SPACE   &kp RALT                                                 X_RH  
//╰──────╯                                           └─────────────┴───────────────┴──────────────┘ ╰──────╯ └─────────────┴───────────────┴─────────────┘                                          ╰──────╯
)

ZMK_LAYER(delta,
//╭──────╮ ┌───────────────┬────────────┬────────────┬─────────────┬───────────────┬──────────────┐ ╭──────╮ ┌─────────────┬───────────────┬─────────────┬────────────┬───────────────┬───────────┐ ╭──────╮
    X_LT     &kp TAB         &kp Q        &kp W        &kp E         &kp R           &kp T            X_MT     &kp Y         &kp U           &kp I         &kp O        &kp P           &kp BSLH      X_RT  
//├──────┤ ├───────────────┼────────────┼────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┼───────────────┼───────────┤ ├──────┤
    X_LM     &mt LCTRL ESC   &mt RGUI A   &mt RALT S   &mt RCTRL D   &mt LSHFT F     &kp G            X_MM     &kp H         &mt RSHFT J     &mt RCTRL K   &mt RALT L   &mt RGUI SEMI   &kp SQT       X_RM  
//├──────┤ ├───────────────┼────────────┼────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┼───────────────┼───────────┤ ├──────┤
    X_LB     &kp LSHFT       &kp Z        &kp X        &kp C         &kp V           &kp B            X_MB     &kp N         &kp M           &kp COMMA     &kp DOT      &kp FSLH        &kp RSHFT     X_RB  
//├──────┤ └───────────────┴────────────┴────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┴───────────────┴───────────┘ ├──────┤
    X_LH                                               &kp LGUI      &lt SDL SPACE   &lt LWL BSPC     X_MH     &lt REL RET   &lt SUL SPACE   &kp RALT                                                 X_RH  
//╰──────╯                                           └─────────────┴───────────────┴──────────────┘ ╰──────╯ └─────────────┴───────────────┴─────────────┘                                          ╰──────╯
)

ZMK_LAYER(epsilon,
//╭──────╮ ┌───────────────┬────────────┬────────────┬─────────────┬───────────────┬──────────────┐ ╭──────╮ ┌─────────────┬───────────────┬─────────────┬────────────┬───────────────┬───────────┐ ╭──────╮
    X_LT     &kp TAB         &kp Q        &kp W        &kp E         &kp R           &kp T            X_MT     &kp Y         &kp U           &kp I         &kp O        &kp P           &kp BSLH      X_RT  
//├──────┤ ├───────────────┼────────────┼────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┼───────────────┼───────────┤ ├──────┤
    X_LM     &mt LCTRL ESC   &mt RGUI A   &mt RALT S   &mt RCTRL D   &mt LSHFT F     &kp G            X_MM     &kp H         &mt RSHFT J     &mt RCTRL K   &mt RALT L   &mt RGUI SEMI   &kp SQT       X_RM  
//├──────┤ ├───────────────┼────────────┼────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┼───────────────┼───────────┤ ├──────┤
    X_LB     &kp LSHFT       &kp Z        &kp X        &kp C         &kp V           &kp B            X_MB     &kp N         &kp M           &kp COMMA     &kp DOT      &kp FSLH        &kp RSHFT     X_RB  
//├──────┤ └───────────────┴────────────┴────────────┼─────────────┼───────────────┼──────────────┤ ├──────┤ ├─────────────┼───────────────┼─────────────┼────────────┴───────────────┴───────────┘ ├──────┤
    X_LH                                               &kp LGUI      &lt SDL SPACE   &lt LWL BSPC     X_MH     &lt REL RET   &lt SUL SPACE   &kp RALT                                                 X_RH  
//╰──────╯                                           └─────────────┴───────────────┴──────────────┘ ╰──────╯ └─────────────┴───────────────┴─────────────┘                                          ╰──────╯
)

ZMK_LAYER(zeta,
//╭──────╮ ┌────────┬────────┬────────┬────────┬────────┬────────┐ ╭──────╮ ┌────────┬────────┬────────┬────────┬────────┬────────┐ ╭──────╮
    X_LT      ___      ___      ___      ___      ___      ___       X_MT      ___      ___      ___      ___      ___      ___       X_RT  
//├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤
    X_LM      ___      ___      ___      ___      ___      ___       X_MM      ___      ___      ___      ___      ___      ___       X_RM  
//├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤
    X_LB      ___      ___      ___      ___      ___      ___       X_MB      ___      ___      ___      ___      ___      ___       X_RB  
//├──────┤ └────────┴────────┴────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┴────────┴────────┘ ├──────┤
    X_LH                                 ___      ___      ___       X_MH      ___      ___      ___                                  X_RH  
//╰──────╯                            └────────┴────────┴────────┘ ╰──────╯ └────────┴────────┴────────┘                            ╰──────╯
)

ZMK_LAYER(spacedown,
//╭──────╮ ┌─────────────────┬───────────────────┬───────────────────┬─────────────────┬─────────────────┬──────────────┐ ╭──────╮ ┌──────────┬───────────┬───────────┬───────────┬────────┬──────────┐ ╭──────╮
    X_LT     &rgb_ug RGB_TOG   &ext_power EP_TOG   &ext_power EP_OFF   &out OUT_USB      &out OUT_BLE      &out OUT_TOG     X_MT      ___        ___         ___         ___         ___     &kp BSPC     X_RT  
//├──────┤ ├─────────────────┼───────────────────┼───────────────────┼─────────────────┼─────────────────┼──────────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┼────────┼──────────┤ ├──────┤
    X_LM     &rgb_ug RGB_EFF   &rgb_ug RGB_HUI     &rgb_ug RGB_SAI     &rgb_ug RGB_BRI   &rgb_ug RGB_SPI    ___             X_MM     &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT    ___      ___         X_RM  
//├──────┤ ├─────────────────┼───────────────────┼───────────────────┼─────────────────┼─────────────────┼──────────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┼────────┼──────────┤ ├──────┤
    X_LB     &rgb_ug RGB_EFR   &rgb_ug RGB_HUD     &rgb_ug RGB_SAD     &rgb_ug RGB_BRD   &rgb_ug RGB_SPD    ___             X_MB     &kp HOME   &kp PG_DN   &kp PG_UP   &kp END      ___      ___         X_RB  
//├──────┤ └─────────────────┴───────────────────┴───────────────────┼─────────────────┼─────────────────┼──────────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┴────────┴──────────┘ ├──────┤
    X_LH                                                                ___               ___               ___             X_MH      ___        ___         ___                                          X_RH  
//╰──────╯                                                           └─────────────────┴─────────────────┴──────────────┘ ╰──────╯ └──────────┴───────────┴───────────┘                                 ╰──────╯
)

ZMK_LAYER(spaceup,
//╭──────╮ ┌─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬────────┐ ╭──────╮ ┌──────────┬───────────┬───────────┬───────────┬────────┬─────────────────┐ ╭──────╮
    X_LT     &rgb_ug RGB_TOG   &kp N1            &kp N2            &kp N3            &kp N4            &kp N5     X_MT     &kp N6     &kp N7      &kp N8      &kp N9      &kp N0   &kp DEL             X_RT  
//├──────┤ ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┼────────┼─────────────────┤ ├──────┤
    X_LM     &rgb_ug RGB_EFF   &rgb_ug RGB_HUI   &rgb_ug RGB_SAI   &rgb_ug RGB_BRI   &rgb_ug RGB_SPI    ___       X_MM     &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT    ___     &rgb_ug RGB_TOG     X_RM  
//├──────┤ ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┼────────┼─────────────────┤ ├──────┤
    X_LB     &rgb_ug RGB_EFR   &rgb_ug RGB_HUD   &rgb_ug RGB_SAD   &rgb_ug RGB_BRD   &rgb_ug RGB_SPD    ___       X_MB     &kp HOME   &kp PG_DN   &kp PG_UP   &kp END      ___      ___                X_RB  
//├──────┤ └─────────────────┴─────────────────┴─────────────────┼─────────────────┼─────────────────┼────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┴────────┴─────────────────┘ ├──────┤
    X_LH                                                            ___               ___               ___       X_MH      ___        ___         ___                                                 X_RH  
//╰──────╯                                                       └─────────────────┴─────────────────┴────────┘ ╰──────╯ └──────────┴───────────┴───────────┘                                        ╰──────╯
)

ZMK_LAYER(lower,
//╭──────╮ ┌─────────┬────────┬────────┬────────┬────────┬─────────┐ ╭──────╮ ┌──────────────┬────────┬────────┬────────┬──────────────┬─────────────────┐ ╭──────╮
    X_LT      ___      &kp N1   &kp N2   &kp N3   &kp N4   &kp N5      X_MT     &kp N6         &kp N7   &kp N8   &kp N9   &kp N0         &kp BSPC            X_RT  
//├──────┤ ├─────────┼────────┼────────┼────────┼────────┼─────────┤ ├──────┤ ├──────────────┼────────┼────────┼────────┼──────────────┼─────────────────┤ ├──────┤
    X_LM     &kp F11   &kp F1   &kp F2   &kp F3   &kp F4   &kp F5      X_MM     &kp KP_PLUS    &kp N4   &kp N5   &kp N6   &kp KP_ENTER   &kp KP_MULTIPLY     X_RM  
//├──────┤ ├─────────┼────────┼────────┼────────┼────────┼─────────┤ ├──────┤ ├──────────────┼────────┼────────┼────────┼──────────────┼─────────────────┤ ├──────┤
    X_LB     &kp F12   &kp F6   &kp F7   &kp F8   &kp F9   &kp F10     X_MB     &kp KP_MINUS   &kp N1   &kp N2   &kp N3   &kp KP_ENTER   &kp KP_DIVIDE       X_RB  
//├──────┤ └─────────┴────────┴────────┼────────┼────────┼─────────┤ ├──────┤ ├──────────────┼────────┼────────┼────────┴──────────────┴─────────────────┘ ├──────┤
    X_LH                                  ___      ___      ___        X_MH      ___            ___      ___                                                 X_RH  
//╰──────╯                             └────────┴────────┴─────────┘ ╰──────╯ └──────────────┴────────┴────────┘                                           ╰──────╯
)

ZMK_LAYER(raise,
//╭──────╮ ┌────────┬──────────┬────────┬──────────┬──────────┬───────────┐ ╭──────╮ ┌───────────┬───────────┬───────────┬──────────┬──────────┬──────────┐ ╭──────╮
    X_LT      ___      ___        ___      ___        ___        ___          X_MT     &kp TILDE   &kp UNDER   &kp PLUS    &kp LBRC   &kp RBRC   &kp PIPE     X_RT  
//├──────┤ ├────────┼──────────┼────────┼──────────┼──────────┼───────────┤ ├──────┤ ├───────────┼───────────┼───────────┼──────────┼──────────┼──────────┤ ├──────┤
    X_LM      ___     &kp EXCL   &kp AT   &kp HASH   &kp DLLR   &kp PRCNT     X_MM     &kp CARET   &kp AMPS    &kp ASTRK   &kp LPAR   &kp RPAR   &kp BSPC     X_RM  
//├──────┤ ├────────┼──────────┼────────┼──────────┼──────────┼───────────┤ ├──────┤ ├───────────┼───────────┼───────────┼──────────┼──────────┼──────────┤ ├──────┤
    X_LB      ___      ___        ___      ___        ___        ___          X_MB     &kp GRAVE   &kp MINUS   &kp EQUAL   &kp LBKT   &kp RBKT   &kp BSLH     X_RB  
//├──────┤ └────────┴──────────┴────────┼──────────┼──────────┼───────────┤ ├──────┤ ├───────────┼───────────┼───────────┼──────────┴──────────┴──────────┘ ├──────┤
    X_LH                                   ___        ___        ___          X_MH      ___         ___         ___                                           X_RH  
//╰──────╯                              └──────────┴──────────┴───────────┘ ╰──────╯ └───────────┴───────────┴───────────┘                                  ╰──────╯
)

ZMK_LAYER(realspace,
//╭──────╮ ┌─────────────┬────────┬────────┬────────┬────────┬────────┐ ╭──────╮ ┌────────┬────────┬────────┬────────┬────────┬─────────────┐ ╭──────╮
    X_LT      ___           ___      ___      ___      ___      ___       X_MT      ___      ___      ___      ___      ___     &kp N5          X_RT  
//├──────┤ ├─────────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼─────────────┤ ├──────┤
    X_LM     &sys_reset     ___      ___      ___      ___      ___       X_MM      ___      ___      ___      ___      ___     &sys_reset      X_RM  
//├──────┤ ├─────────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼─────────────┤ ├──────┤
    X_LB     &bootloader    ___      ___      ___      ___      ___       X_MB      ___      ___      ___      ___      ___     &bootloader     X_RB  
//├──────┤ └─────────────┴────────┴────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┴────────┴─────────────┘ ├──────┤
    X_LH                                      ___      ___      ___       X_MH      ___      ___      ___                                       X_RH  
//╰──────╯                                 └────────┴────────┴────────┘ ╰──────╯ └────────┴────────┴────────┘                                 ╰──────╯
)

ZMK_LAYER(adjust,
//╭──────╮ ┌────────┬────────┬────────┬────────┬────────┬────────┐ ╭──────╮ ┌────────┬────────┬────────┬────────┬────────┬────────┐ ╭──────╮
    X_LT      ___      ___      ___      ___      ___      ___       X_MT      ___      ___      ___      ___      ___     &kp N6     X_RT  
//├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤
    X_LM      ___      ___      ___      ___      ___      ___       X_MM      ___      ___      ___      ___      ___      ___       X_RM  
//├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤
    X_LB      ___      ___      ___      ___      ___      ___       X_MB      ___      ___      ___      ___      ___      ___       X_RB  
//├──────┤ └────────┴────────┴────────┼────────┼────────┼────────┤ ├──────┤ ├────────┼────────┼────────┼────────┴────────┴────────┘ ├──────┤
    X_LH                                 ___      ___      ___       X_MH      ___      ___      ___                                  X_RH  
//╰──────╯                            └────────┴────────┴────────┘ ╰──────╯ └────────┴────────┴────────┘                            ╰──────╯
)

ZMK_LAYER(subspace,
//╭──────╮ ┌─────────────────┬────────┬────────┬──────────────┬──────────────┬──────────────┐ ╭──────╮ ┌────────┬────────┬────────┬────────┬────────┬────────┐ ╭──────╮
    X_LT     &rgb_ug RGB_TOG    ___      ___     &out OUT_USB   &out OUT_BLE   &out OUT_TOG     X_MT      ___      ___      ___      ___      ___     &kp N7     X_RT  
//├──────┤ ├─────────────────┼────────┼────────┼──────────────┼──────────────┼──────────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤
    X_LM     _BT_SEL_KEYS_                                                                      X_MM      ___      ___      ___      ___      ___      ___       X_RM  
//├──────┤ ├─────────────────┼────────┼────────┼──────────────┼──────────────┼──────────────┤ ├──────┤ ├────────┼────────┼────────┼────────┼────────┼────────┤ ├──────┤
    X_LB     _BT_SEL_KEYS_2_                                                                    X_MB      ___      ___      ___      ___      ___      ___       X_RB  
//├──────┤ └─────────────────┴────────┴────────┼──────────────┼──────────────┼──────────────┤ ├──────┤ ├────────┼────────┼────────┼────────┴────────┴────────┘ ├──────┤
    X_LH                                          ___            ___            ___             X_MH      ___      ___      ___                                  X_RH  
//╰──────╯                                     └──────────────┴──────────────┴──────────────┘ ╰──────╯ └────────┴────────┴────────┘                            ╰──────╯
)

ZMK_LAYER(hyperspace,
//╭──────╮ ┌─────────────────┬─────────────────┬─────────────────┬─────────────────┬─────────────────┬────────┐ ╭──────╮ ┌──────────┬───────────┬───────────┬───────────┬────────┬────────┐ ╭──────╮
    X_LT     &rgb_ug RGB_TOG    ___               ___               ___               ___               ___       X_MT      ___        ___         ___         ___         ___     &kp N8     X_RT  
//├──────┤ ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┼────────┼────────┤ ├──────┤
    X_LM     &rgb_ug RGB_EFF   &rgb_ug RGB_HUI   &rgb_ug RGB_SAI   &rgb_ug RGB_BRI   &rgb_ug RGB_SPI    ___       X_MM     &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT    ___      ___       X_RM  
//├──────┤ ├─────────────────┼─────────────────┼─────────────────┼─────────────────┼─────────────────┼────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┼────────┼────────┤ ├──────┤
    X_LB     &rgb_ug RGB_EFR   &rgb_ug RGB_HUD   &rgb_ug RGB_SAD   &rgb_ug RGB_BRD   &rgb_ug RGB_SPD    ___       X_MB     &kp HOME   &kp PG_DN   &kp PG_UP   &kp END      ___      ___       X_RB  
//├──────┤ └─────────────────┴─────────────────┴─────────────────┼─────────────────┼─────────────────┼────────┤ ├──────┤ ├──────────┼───────────┼───────────┼───────────┴────────┴────────┘ ├──────┤
    X_LH                                                            ___               ___               ___       X_MH      ___        ___         ___                                        X_RH  
//╰──────╯                                                       └─────────────────┴─────────────────┴────────┘ ╰──────╯ └──────────┴───────────┴───────────┘                               ╰──────╯
)

ZMK_LAYER(base,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___     &kp Q         &kp W         &kp F         &kp P         &kp B           X_MT     &kp J         &kp L         &kp U         &kp Y         &kp SQT         X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     &hml LGUI A   &hml LALT R   &hml LSHFT S  &hml LCTRL T  &kp G           X_MM     &kp M         &hmr LCTRL N  &hmr RSHFT E  &hmr LALT I   &hmr LGUI O     X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     &kp Z         &kp X         &kp C         &kp D         &kp V           X_MB     &kp K         &kp H         &comma_morph  &dot_morph    &qexcl          X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                           ___         &lt_spc NAV 0  &lt FN RET      X_MH     SMART_NUM     &smart_shft   ___                                         X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────╯                             ╰──────╯
)

ZMK_LAYER(nav,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___     ___           ___           &kp LS(TAB)   &swapper      ___             X_MT     &kp PG_UP     NAV_BSPC      NAV_UP        NAV_DEL       ___             X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     &sk LGUI      &sk LALT      &sk LSHFT     &sk LCTRL     ___             X_MM     &kp PG_DN     NAV_LEFT      NAV_DOWN      NAV_RIGHT     &kp RET         X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     ___           ___           ___           ___           ___             X_MB     &kp INS       &kp TAB       &kp LT        &kp GT        ___             X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                          ___           ___           ___             X_MH     ___           CANCEL        ___                                         X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────╯                             ╰──────╯
)

ZMK_LAYER(fn,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___     &kp F12       &kp F7        &kp F8        &kp F9        ___             X_MT     ___           &kp C_PREV    &kp C_VOL_UP  &kp C_NEXT    &win_sleep      X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     &hml LGUI F11 &hml LALT F4  &hml LSHFT F5 &hml LCTRL F6 ___             X_MM     ___           DSK_PREV      VOL_DOWN      DSK_NEXT      ___             X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     &kp F10       &kp F1        &kp F2        &kp F3        ___             X_MB     PIN_APP       PIN_WIN       DSK_MGR       ___           ___             X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                           ___           ___          ___             X_MH     &kp C_MUTE    &kp C_PP      ___                                         X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────╯                             ╰──────╯
)

ZMK_LAYER(num,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___     ___           &kp N7        &kp N8        &kp N9        ___             X_MT     ___           ___           ___           ___           ___             X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     &hml LGUI N0  &hml LALT N4  &hml LSHFT N5 &hml LCTRL N6 ___             X_MM     ___           ___           ___           ___           ___             X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     ___           &kp N1        &kp N2        &kp N3        ___             X_MB     ___           ___           ___           ___           ___             X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                           ___           ___          ___             X_MH     ___           ___           ___                                         X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────╯                             ╰──────╯
)

ZMK_LAYER(sys,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___                                _BT_SEL_KEYS_                                X_MT     ___           ___           ___           ___           ___             X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     ___           ___           ___           ___           &bootloader     X_MM     &bootloader   ___           ___           ___           ___             X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     ___           ___           ___           ___           &sys_reset      X_MB     &sys_reset    ___           ___           ___           ___             X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                          ___           ___           ___             X_MH     ___           ___           ___                                         X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────╯                             ╰──────╯
)

ZMK_LAYER(uc,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___     ___           &el_omega     &el_phi       &el_pi        &el_beta        X_MT     ___           &el_lambda    &el_upsilon   &el_psi       &de_eszett      X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     &el_alpha     &el_rho       &el_sigma     &el_tau       &el_gamma       X_MM     &el_mu        &el_nu        &el_epsilon   &el_iota      &el_omikron     X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     &el_zeta      &el_xi        &el_chi       &el_delta     &el_theta       X_MB     &el_kappa     &el_eta       &de_ae        &de_oe        &de_ue          X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                               ___           ___       ___            X_MH     ___           ___           ___                                         X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰─────────────┴─────────────┴─────────────╯                             ╰──────╯
)

ZMK_LAYER(mouse,
//╭──────╮ ╭────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮ ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮ ╭──────╮
    X_LT      ___     ___           ___           ___           ___           ___             X_MT     U_WH_L        U_WH_D        U_MS_U         U_WH_U       U_WH_R          X_RT
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LM      ___     ___           ___           ___           ___           ___             X_MM     ___           U_MS_L        U_MS_D         U_MS_R       ___             X_RM
//├──────┤ ├────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤ ├──────┤
    X_LB      ___     ___           ___           ___           ___           ___             X_MB     ___           &mkp MB4      &mkp MCLK      &mkp MB5     ___             X_RB
//├──────┤ ╰────────┴─────────────┼─────────────┴─────────────┼─────────────┼─────────────┤ ├──────┤ ├─────────────┼─────────────┼─────────────┴───────────────────────────╯ ├──────┤
    X_LH                                          ___           ___           ___             X_MH     &mkp LCLK     &mkp RCLK      ___                                        X_RH
//╰──────╯                                      ╰─────────────┴─────────────┴─────────────╯ ╰──────╯ ╰────────────┴──────────────┴─────────────╯                             ╰──────╯
)

/* vim: set ft=c tw=174: */
